{"interfaceLanguages":{"swift":[{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/deckofplayingcards\/deck\/init(_:)","title":"init([PlayingCard])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/deckofplayingcards\/deck\/count","title":"var count: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/deckofplayingcards\/deck\/deal()","title":"func deal() -> PlayingCard?","type":"method"},{"path":"\/documentation\/deckofplayingcards\/deck\/shuffle()","title":"func shuffle()","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/deckofplayingcards\/deck\/standard52carddeck()","title":"static func standard52CardDeck() -> Deck","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/deckofplayingcards\/deck\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/deckofplayingcards\/deck\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/deckofplayingcards\/deck\/init(arrayliteral:)","title":"init(arrayLiteral: PlayingCard...)","type":"init"}],"path":"\/documentation\/deckofplayingcards\/deck\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"}],"path":"\/documentation\/deckofplayingcards\/deck","title":"Deck","type":"struct"}],"path":"\/documentation\/deckofplayingcards","title":"DeckOfPlayingCards","type":"module"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playingcard\/playingcard\/init(rank:suit:)","title":"init(rank: Rank, suit: Suit)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playingcard\/playingcard\/rank","title":"let rank: Rank","type":"property"},{"path":"\/documentation\/playingcard\/playingcard\/suit","title":"let suit: Suit","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/playingcard\/playingcard\/'...(_:)-8o4re","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/playingcard\/playingcard\/'...(_:)-98myx","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/playingcard\/playingcard\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/playingcard\/playingcard\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/playingcard\/playingcard\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/playingcard\/playingcard\/_(_:_:)-7gkc6","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/playingcard\/playingcard\/_(_:_:)-9jqgj","title":"static func < (PlayingCard, PlayingCard) -> Bool","type":"op"},{"path":"\/documentation\/playingcard\/playingcard\/_=(_:_:)-1kuqw","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/playingcard\/playingcard\/_=(_:_:)-8oquc","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/playingcard\/playingcard\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playingcard\/playingcard\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/playingcard\/playingcard\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/playingcard\/playingcard\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/playingcard\/playingcard\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/playingcard\/playingcard","title":"PlayingCard","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/playingcard\/rank\/ace","title":"case ace","type":"case"},{"path":"\/documentation\/playingcard\/rank\/eight","title":"case eight","type":"case"},{"path":"\/documentation\/playingcard\/rank\/five","title":"case five","type":"case"},{"path":"\/documentation\/playingcard\/rank\/four","title":"case four","type":"case"},{"path":"\/documentation\/playingcard\/rank\/jack","title":"case jack","type":"case"},{"path":"\/documentation\/playingcard\/rank\/king","title":"case king","type":"case"},{"path":"\/documentation\/playingcard\/rank\/nine","title":"case nine","type":"case"},{"path":"\/documentation\/playingcard\/rank\/queen","title":"case queen","type":"case"},{"path":"\/documentation\/playingcard\/rank\/seven","title":"case seven","type":"case"},{"path":"\/documentation\/playingcard\/rank\/six","title":"case six","type":"case"},{"path":"\/documentation\/playingcard\/rank\/ten","title":"case ten","type":"case"},{"path":"\/documentation\/playingcard\/rank\/three","title":"case three","type":"case"},{"path":"\/documentation\/playingcard\/rank\/two","title":"case two","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playingcard\/rank\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/playingcard\/rank\/'...(_:)-1bkd4","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/playingcard\/rank\/'...(_:)-3sfiw","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/playingcard\/rank\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/playingcard\/rank\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/playingcard\/rank\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/playingcard\/rank\/_(_:_:)-76w24","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/playingcard\/rank\/_(_:_:)-8a5o","title":"static func < (Rank, Rank) -> Bool","type":"op"},{"path":"\/documentation\/playingcard\/rank\/_=(_:_:)-6vss9","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/playingcard\/rank\/_=(_:_:)-9dkfp","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/playingcard\/rank\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playingcard\/rank\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/playingcard\/rank\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/playingcard\/rank\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/playingcard\/rank\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playingcard\/rank\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playingcard\/rank\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/playingcard\/rank\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/playingcard\/rank","title":"Rank","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/playingcard\/suit\/clubs","title":"case clubs","type":"case"},{"path":"\/documentation\/playingcard\/suit\/diamonds","title":"case diamonds","type":"case"},{"path":"\/documentation\/playingcard\/suit\/hearts","title":"case hearts","type":"case"},{"path":"\/documentation\/playingcard\/suit\/spades","title":"case spades","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/playingcard\/suit\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/playingcard\/suit\/'...(_:)-1r03s","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/playingcard\/suit\/'...(_:)-9gmw5","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/playingcard\/suit\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/playingcard\/suit\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/playingcard\/suit\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/playingcard\/suit\/_(_:_:)-50lny","title":"static func < (Suit, Suit) -> Bool","type":"op"},{"path":"\/documentation\/playingcard\/suit\/_(_:_:)-86cvb","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/playingcard\/suit\/_=(_:_:)-6uive","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/playingcard\/suit\/_=(_:_:)-pyo6","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/playingcard\/suit\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playingcard\/suit\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/playingcard\/suit\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/playingcard\/suit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/playingcard\/suit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/playingcard\/suit\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/playingcard\/suit\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/playingcard\/suit\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/playingcard\/suit","title":"Suit","type":"enum"}],"path":"\/documentation\/playingcard","title":"PlayingCard","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}